<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://jtgonzo.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://jtgonzo.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-03-22T07:25:02+00:00</updated><id>https://jtgonzo.github.io/feed.xml</id><title type="html">Jose Thiago Gonsalves</title><subtitle>My personal porfolio website highlighting current projects and acquired skills. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">1st Phase of Github FSI repository updating has begun!!</title><link href="https://jtgonzo.github.io/blog/2024/post-2/" rel="alternate" type="text/html" title="1st Phase of Github FSI repository updating has begun!!"/><published>2024-03-15T20:11:00+00:00</published><updated>2024-03-15T20:11:00+00:00</updated><id>https://jtgonzo.github.io/blog/2024/post-2</id><content type="html" xml:base="https://jtgonzo.github.io/blog/2024/post-2/"><![CDATA[<p>With my time as a garduate student comping to a close I am finally able to ta</p> <p>These codes were very recently uploaded (March 20th, 2024) from my system and have yet to be vetted for general distribution/use. I am currently working through commenting, cleaning and re-testing these solver which were put together approximately 1 year ago. Please allow me the next few weeks to clean up the codes so as to make them more instructive, easy to use, and bug-free.</p> <p>If the reader is still compelled to experiment I encourgae them to do so, however, <code class="language-plaintext highlighter-rouge">while this disclaimer is being displayed</code> I suggest that one exercises <strong><em>reasonable</em></strong> caution when using the partitoned solvers provided.</p> <hr/> <h4 id="benchmark-cases">Benchmark Cases</h4> <ul> <li> 2D Incompressible Flow over a Cantilevered Elastic Beam</li> <li> 3D Pressure Pulse Propogation through an Elastic Tube</li> </ul> <hr/> <blockquote> <p>We do not grow absolutely, chronologically. We grow sometimes in one dimension, and not in another, unevenly. We grow partially. We are relative. We are mature in one realm, childish in another. —Anais Nin</p> </blockquote> <hr/> <p>Lastly, for those readers seeking a more digestible version of the rebKIT-based monolthic FSI solvers or the individual (rebKIT-based) domain-specific solvers I have additionally compiled what I believe to be useful resources in the following repositories:</p> <ol> <li><a href="https://github.com/JTGonzo/Monolithic_FSI">Monolithic Fluid Structure Interaction solvers</a></li> <li><a href="https://github.com/JTGonzo/Single_Physics_Solvers">Single Domain (CFD &amp; CSM) solvers</a></li> <li><a href="https://github.com/JTGonzo/Partitioned_FSI">Partitioned (strongly coupled) Fluid Structure Interaction solvers</a></li> <li><a href="https://github.com/JTGonzo/Multi-Threaded_Partitioned_FSI">Parrallelized Partitioned FSI solvers</a></li> </ol> <p>For absolute clarity, the <a href="https://github.com/redbKIT/redbKIT"><strong>redbKIT</strong></a> toolkit by itself is an <strong><em>AMAZING</em></strong> resource for (young) academics seeking an education on the finite element method and reduced-order modelling. As such I <strong>strongly</strong> recommend the reader fork that repository and work through redbKIT’s numerous well crafted example problems. <em>I personally give this resource the lion’s share of credit in helping me complete my graduate studies.</em></p> <p>Having said that, however, as is true for (almost) all <strong>well developed / robust</strong> software packages used to tackle complex problems in computational physics; its sophistication tends to be its own undoing for those novice students beginning their journey in the simulation sciences or those young numerical methods researchers who are focusing on a niche element of the problem/framework/technique and just want the machinery around the issue to be (first) working and (secondly) easily digestible for peace of mind, debugging, development etc. purposes. As such, the codes provided above seek to shallow the learning curve and expedite the toolkit’s adoption/integration.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[With my time as a garduate student comping to a close I am finally able to ta]]></summary></entry><entry><title type="html">Validation of Partitioned FSI framework completed</title><link href="https://jtgonzo.github.io/blog/2023/post-1/" rel="alternate" type="text/html" title="Validation of Partitioned FSI framework completed"/><published>2023-06-30T20:11:00+00:00</published><updated>2023-06-30T20:11:00+00:00</updated><id>https://jtgonzo.github.io/blog/2023/post-1</id><content type="html" xml:base="https://jtgonzo.github.io/blog/2023/post-1/"><![CDATA[<h2 id="probelm-statement">Probelm Statement</h2> <p>In order to study the <a href="https://jtgonzo.github.io/">“<em>coupling instability of low mass-ratio partitioned FSI simulations</em>”</a> I first needed to develop a robust partitioned numerical framework to experiment on a series of challenging FSI problems. To this end, after much struggling and wondering in the dark, I was <strong>FINALLY</strong> able to develop a suite of 2D and 3D high-fidelity <a href="](https://github.com/JTGonzo/Partitioned_FSI)">partitioned FSI codes</a>. Achieveing this feat is a source of real personal pride; as without proper guidance or an intimate knowledge of the fundamental instability intrinsic to the problem, great effort was required (often involving numerous ptotracted periods of brutal trial and error) to amass a complete and homogenous set of numerical tools to tackle this difficult problem.</p> <p>In the end (having experimented on the gamut of available open-source resources) the majority of the code-based was derived from a parallel source <a href="https://github.com/JTGonzo/Monolithic_FSI">(redbKIT-based) monolithic FSI</a> solver. These solvers were decomposed from the original <a href="https://github.com/redbKIT/redbKIT">toolkit</a> into their baseline elements and were then strategically reassembled and further built upon until a sufficiently robust <strong>partitioned</strong> FSI scheme was attained.</p> <hr/> <h2 id="coupling-features">Coupling Features</h2> <p>Features unique to a partitioned strategy that I have integrated into my developed framework include:<br/></p> <ul> <li>Coupling Methods: <ul> <li>Anderson Acceleration</li> <li>Generalized Broyden</li> <li>Broyden’s Second Method</li> <li>Multi-Vector Least Square</li> <li>Dynamic Aitken Relaxation</li> <li>Constant Relaxation</li> <li>Pure Gauss-Seidel Iterations</li> </ul> </li> <li>Filtering Strategies: <ul> <li>QR1 filtering</li> <li>QR2 (Classic Gram-Schmidt) filtering</li> <li>QR2 (Modified Gram-Schmidt) filtering</li> <li>QR2 (Householder Reflections) filtering</li> <li>POD filtering</li> </ul> </li> <li>Interface Mapping Techniques: <ul> <li>Nearest Neighbour Interpolation</li> <li>Projection and Linear Interpolation</li> <li>Radial Basis Function Interpolation</li> </ul> </li> <li>Extrapolation Methods: <ul> <li>Constant</li> <li>Linear</li> <li>Quadratic</li> <li>Cubic</li> </ul> </li> <li><a href="https://github.com/JTGonzo/Multi-Threaded_Partitioned_FSI">Work in Progress Tools</a>: <ul> <li>Interface tracking</li> <li>Adaptive Regularization Least Squares</li> <li>Selective Secant Inclusion</li> <li>Truncated SVD filtering</li> </ul> </li> </ul> <hr/> <h2 id="framework-validation">Framework Validation</h2> <p>To validate the accuracy of the developed partitioned framework, I compared my results for three challenging FSI benchmarks againts those presented in the literature and that produced by established software. The results served mainly to demonstrate the accuracy of the domain solvers themselves and, generally speaking, the robustness of the scheme to handle complex FSI problems with strong added-mass effects, high structural nonlinearity, and considerable mesh deformation. The benchmarks successfully reproduced included;</p> <p><ins><strong>Benchmark Cases</strong></ins><br/></p> <ul> <li> 2D Incompressible Flow over a Cantilevered Elastic Beam</li> <li> 3D Pressure Pulse Propogation through an Elastic Tube</li> </ul> <p>details of this validation procedure and the deinitive results generated are given on this website’s companion <a href="https://jtgonzo.github.io/projects/">projects</a> page.</p>]]></content><author><name></name></author><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[successfully compared my developed framework results against established 2D and 3D FSI benchmarks]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://jtgonzo.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://jtgonzo.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://jtgonzo.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry></feed>